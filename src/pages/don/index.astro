---
import Layout from "../../layouts/Layout.astro";
import paypalLogo from "../../assets/paypal-logo.png";
import gpayLogo from "../../assets/googlepay-logo.png";
import creditcardIcon from "../../assets/creditcard-icon.png";
---

<Layout>
  <div
    class="w-full max-w-md mx-auto p-4 sm:p-6 bg-white rounded-lg shadow-md my-4 mt-5"
  >
    <h1 class="font-secondary text-2xl sm:text-3xl font-bold text-center mb-4">
      Faire un Don
    </h1>

    <p class="text-sm sm:text-base mb-4 sm:mb-6">
      Vos dons nous aident √† maintenir Echo Safe gratuite et s√©curis√©e pour
      tous.
    </p>

    <p class="text-sm sm:text-base mb-4 sm:mb-6">
      Ils nous permettent de d√©velopper de nouvelles fonctionnalit√©s,
      d'am√©liorer la s√©curit√© et de garantir une exp√©rience utilisateur
      optimale.
    </p>

    <form id="donation-form" class="space-y-4">
      <!-- Preset amounts -->
      <!-- Preset amounts -->
      <div class="grid grid-cols-1 sm:grid-cols-4 gap-2 sm:gap-3">
        <button
          type="button"
          class="hover:cursor-pointer donation-amount-btn border border-primary text-primary py-2 rounded-md transition-colors hover:bg-primary hover:text-white active:bg-primary active:text-white focus:bg-primary focus:text-white"
          data-amount="2">2‚Ç¨</button
        >
        <button
          type="button"
          class="hover:cursor-pointer donation-amount-btn border border-primary text-primary py-2 rounded-md transition-colors hover:bg-primary hover:text-white active:bg-primary active:text-white focus:bg-primary focus:text-white"
          data-amount="5">5‚Ç¨</button
        >
        <button
          type="button"
          class="hover:cursor-pointer donation-amount-btn border border-primary text-primary py-2 rounded-md transition-colors hover:bg-primary hover:text-white active:bg-primary active:text-white focus:bg-primary focus:text-white"
          data-amount="10">10‚Ç¨</button
        >
        <button
          type="button"
          class="hover:cursor-pointer donation-amount-btn border border-primary text-primary py-2 rounded-md transition-colors hover:bg-primary hover:text-white active:bg-primary active:text-white focus:bg-primary focus:text-white"
          data-amount="20">20‚Ç¨</button
        >
      </div>

      <!-- Custom amount -->
      <div>
        <label for="custom-amount" class="block text-sm font-medium mb-1"
          >Votre montant</label
        >
        <input
          type="number"
          id="custom-amount"
          name="custom-amount"
          class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
          min="1"
          step="1"
        />
      </div>

      <!-- Payment options -->
      <div class="mt-6">
        <div
          class="flex flex-wrap sm:flex-nowrap justify-center sm:justify-between items-center gap-3"
        >
          <button
            type="button"
            class="hover:cursor-pointer payment-method-btn flex-1 flex items-center justify-center bg-white border border-gray-300 rounded-md p-3 hover:bg-gray-50 transition-colors focus:outline-none focus:ring-2 focus:ring-indigo-500"
            data-method="paypal"
          >
            <img src={paypalLogo.src} alt="PayPal" class="h-5 sm:h-6" />
          </button>

          <button
            type="button"
            class="hover:cursor-pointer payment-method-btn flex-1 flex items-center justify-center bg-white border border-gray-300 rounded-md p-3 hover:bg-gray-50 transition-colors focus:outline-none focus:ring-2 focus:ring-indigo-500"
            data-method="gpay"
          >
            <img src={gpayLogo.src} alt="Google Pay" class="h-5 sm:h-6" />
          </button>

          <button
            type="button"
            class="hover:cursor-pointer payment-method-btn flex-1 flex items-center justify-center bg-white border border-gray-300 rounded-md p-3 hover:bg-gray-50 transition-colors focus:outline-none focus:ring-2 focus:ring-indigo-500"
            data-method="card"
          >
            <img
              src={creditcardIcon.src}
              alt="Credit Card"
              class="h-5 sm:h-6"
            />
          </button>
        </div>
      </div>

      <!-- √âtat du processus -->
      <div id="process-status" class="hidden">
        <div class="flex items-center justify-center p-4">
          <div
            class="animate-spin rounded-full h-5 w-5 border-t-2 border-b-2 border-indigo-600 mr-2"
          >
          </div>
          <span class="">Traitement en cours...</span>
        </div>
      </div>

      <!-- Message d'erreur -->
      <div
        id="error-message"
        class="hidden text-center text-red-600 bg-red-50 p-3 rounded-md"
      >
      </div>

      <!-- Submit button -->
      <button
        type="submit"
        id="donate-button"
        class="hover:cursor-pointer w-full bg-primary text-white py-2 sm:py-3 rounded-3xl hover:bg-white hover:text-primary hover:border-1 transition-colors mt-6 disabled:bg-gray-400 disabled:cursor-not-allowed text-sm sm:text-base font-medium"
        disabled
      >
        Faire un don
      </button>

      <!-- Ajout message de s√©curit√© -->
      <div class="text-sm text-gray-500 mt-6 text-center">
        <p class="mb-2">üîí Paiement s√©curis√©</p>
        <p>
          Toutes les transactions sont s√©curis√©es et chiffr√©es.<br />
          Vos informations sont trait√©es en toute confidentialit√©.
        </p>
      </div>
    </form>
  </div>

  <!-- Inclure Stripe.js -->
  <script is:inline src="https://js.stripe.com/v3/"></script>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // Initialiser Stripe avec votre cl√© publique

      // Assurez-vous d'avoir votre cl√© disponible dans l'environnement client
      const stripe = Stripe(
        "pk_test_51RJukxQtwwMgubEfinIb9zJist8z3iIAEgAxNMdy2QMVR25f9SrtUN8XEV6t62ysP1dTc6sw44XtrbKZPKH8CgMY00VDwBH9tK"
      );

      const form = document.getElementById("donation-form");
      const donateButton = document.getElementById("donate-button");
      const processStatus = document.getElementById("process-status");
      const errorMessage = document.getElementById("error-message");
      const customAmountInput = document.getElementById("custom-amount");
      const presetAmountButtons = document.querySelectorAll(
        ".donation-amount-btn"
      );
      const paymentMethodButtons = document.querySelectorAll(
        ".payment-method-btn"
      );

      let selectedAmount = null;
      let selectedPaymentMethod = null;

      // Function to update donate button state
      const updateDonateButtonState = () => {
        if (selectedAmount && selectedPaymentMethod) {
          donateButton.disabled = false;
        } else {
          donateButton.disabled = true;
        }
      };

      // Handle preset amount buttons
      presetAmountButtons.forEach((button) => {
        button.addEventListener("click", () => {
          // Reset all buttons
          presetAmountButtons.forEach((btn) => {
            btn.classList.remove("bg-primary", "text-white");
          });

          // Highlight selected button
          button.classList.add("bg-primary", "text-white");

          // Set amount and clear custom input
          selectedAmount = parseInt(button.getAttribute("data-amount"));
          customAmountInput.value = "";

          updateDonateButtonState();
        });
      });

      // Handle custom amount input
      customAmountInput.addEventListener("input", (e) => {
        const value = parseInt(e.target.value);

        // Reset preset buttons
        presetAmountButtons.forEach((btn) => {
          btn.classList.remove("bg-indigo-600", "text-white");
          btn.classList.add("text-indigo-600", "bg-white");
        });

        if (value && value > 0) {
          selectedAmount = value;
        } else {
          selectedAmount = null;
        }

        updateDonateButtonState();
      });

      // Handle payment method buttons
      paymentMethodButtons.forEach((button) => {
        button.addEventListener("click", () => {
          // Reset all buttons
          paymentMethodButtons.forEach((btn) => {
            btn.classList.remove("ring-2", "ring-indigo-500");
          });

          // Highlight selected button
          button.classList.add("ring-2", "ring-indigo-500");

          // Set payment method
          selectedPaymentMethod = button.getAttribute("data-method");

          updateDonateButtonState();
        });
      });

      // Handle form submission
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // Masquer les messages d'erreur pr√©c√©dents
        errorMessage.classList.add("hidden");

        // D√©sactiver le bouton et afficher l'√©tat du processus
        donateButton.disabled = true;
        processStatus.classList.remove("hidden");

        try {
          if (selectedPaymentMethod === "card") {
            // Communiquer avec l'API pour cr√©er une session de paiement
            const response = await fetch("/api/checkout-session", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                amount: selectedAmount,
                currency: "eur",
              }),
            });

            if (!response.ok) {
              throw new Error(
                "Probl√®me lors de la cr√©ation de la session de paiement"
              );
            }

            const session = await response.json();

            // Rediriger vers Stripe Checkout
            const result = await stripe.redirectToCheckout({
              sessionId: session.id,
            });

            if (result.error) {
              throw new Error(result.error.message);
            }
          } else if (selectedPaymentMethod === "paypal") {
            // Simuler une redirection vers PayPal
            window.location.href = "/don/remerciement?simulation=paypal";
          } else if (selectedPaymentMethod === "gpay") {
            // Simuler une redirection vers Google Pay
            window.location.href = "/don/remerciement?simulation=gpay";
          }
        } catch (error) {
          console.error("Erreur:", error);

          // Afficher le message d'erreur
          errorMessage.textContent =
            "Une erreur est survenue lors du traitement du paiement. Veuillez r√©essayer.";
          errorMessage.classList.remove("hidden");

          // R√©activer le bouton
          donateButton.disabled = false;
        } finally {
          // Cacher l'√©tat du processus
          processStatus.classList.add("hidden");
        }
      });
    });
  </script>
</Layout>
