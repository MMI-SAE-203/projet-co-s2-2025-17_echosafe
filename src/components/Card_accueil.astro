---
import Button from "./Button.astro";

export interface Props {
  title: string;
  description: string;
  buttonText: string;
  buttonLink: string;
  imageUrl?: string;
  bgColor: string;
  textColor: string;
  imagePosition?: "left" | "right";
  layout?: "horizontal" | "vertical";
}

const {
  title,
  description,
  buttonText,
  buttonLink,
  imageUrl,
  bgColor,
  textColor,
  imagePosition = "right",
  layout = "horizontal",
  bgGradient = "",
} = Astro.props;

const backgroundClass = bgGradient || bgColor;
const isImageLeft = imagePosition === "left";
---

<div
  class={`rounded-3xl overflow-hidden p-10 my-4 lg:mx-1 ${backgroundClass}`}
>
  <div
    class={`flex flex-col items-center gap-6 
      ${imageUrl ? "md:flex-row" : "justify-center text-center"}
    `}
  >
    {
      imageUrl && (
        <div
          class={`w-full md:w-1/3 flex justify-center
          ${layout === "horizontal" ? (isImageLeft ? "md:order-1" : "md:order-2") : ""}
          order-2
        `}
        >
          <img src={imageUrl} alt={title} class="max-h-80" />
        </div>
      )
    }

    <div
      class={`w-full ${imageUrl ? "md:w-2/3" : ""} flex flex-col ${textColor}
        ${layout === "horizontal" && imageUrl ? (isImageLeft ? "md:order-2" : "md:order-1") : ""}
        order-1
        items-center text-center
      `}
    >
      <h3 class="text-xl md:text-2xl font-bold mb-3 font-secondary">{title}</h3>
      <p class="mb-4">{description}</p>
      <div class="flex justify-center">
        <Button variant="dark" href={buttonLink}>{buttonText}</Button>
      </div>
    </div>
  </div>
</div>
