import { c as createAstro, a as createComponent, r as renderTemplate, g as defineScriptVars, d as renderScript, b as addAttribute, m as maybeRenderHead, e as renderComponent } from '../chunks/astro/server_DviQv69v.mjs';
import 'kleur/colors';
import { $ as $$Layout } from '../chunks/Layout_6NBKjMwL.mjs';
import 'clsx';
/* empty css                                 */
import PocketBase from 'pocketbase';
export { r as renderers } from '../chunks/internal_BsTt5pTQ.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro$1 = createAstro("https://echosafe.eloishenry.fr/");
const $$Formulaire = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$Formulaire;
  const {
    userId = "",
    questions = [
      {
        id: 1,
        title: "Avez-vous d\xE9j\xE0 \xE9t\xE9 victime de harc\xE8lement ?",
        options: ["Oui", "Non", "Pr\xE9f\xE8re ne pas r\xE9pondre"]
      },
      {
        id: 2,
        title: "Dans quel environnement cela s'est-il produit ?",
        options: ["Au travail", "\xC0 l'\xE9cole", "En ligne", "Dans l'espace public"]
      },
      {
        id: 3,
        title: "Avez-vous signal\xE9 cet incident ?",
        options: ["Oui", "Non", "J'ai h\xE9sit\xE9 mais ne l'ai pas fait"]
      }
    ]
  } = Astro2.props;
  const totalQuestions = questions.length;
  return renderTemplate(_a || (_a = __template(["", '<div class="min-h-screen bg-white flex items-center justify-center p-5" data-astro-cid-2oetuemr> <div class="bg-white rounded-3xl shadow-2xl p-8 md:p-10 max-w-lg w-full text-center relative" data-astro-cid-2oetuemr> <!-- Bouton retour --> <!-- Bouton retour --> <button id="backBtn" class="hover:cursor-pointer absolute top-6 left-6 md:top-8 md:left-8 text-3xl text-primary hover:scale-110 transition-transform duration-200 hidden w-10 h-10 flex items-center justify-center" aria-label="Question pr\xE9c\xE9dente" data-astro-cid-2oetuemr>\n\u2039\n</button> <!-- Contenu principal du questionnaire --> <div id="questionContent" data-astro-cid-2oetuemr> <!-- Compteur de questions --> <div id="questionCounter" class="text-gray-500 text-sm mb-3" data-astro-cid-2oetuemr>\nQuestion 1 sur ', ' </div> <!-- Barre de progression --> <div class="w-full h-1 bg-gray-200 rounded-full mb-8" data-astro-cid-2oetuemr> <div id="progressBar" class="h-full bg-primary rounded-full transition-all duration-500 ease-out"', ' data-astro-cid-2oetuemr></div> </div> <!-- Titre de la question --> <h2 id="questionTitle" class="text-primary text-2xl md:text-3xl font-semibold mb-8 md:mb-10 leading-tight px-2" data-astro-cid-2oetuemr> ', ' </h2> <!-- Options --> <div id="optionsContainer" class="flex flex-col gap-4 mb-8 md:mb-10" data-astro-cid-2oetuemr> ', ` </div> <!-- Bouton suivant - FIX: Ajout de !important pour forcer l'affichage --> <button id="nextBtn" class="bg-primary text-white px-8 md:px-10 py-3 md:py-4 rounded-full text-base font-semibold hover:bg-white hover:text-primary border border-primary transition-all duration-300 hover:-translate-y-0.5 hover:shadow-lg opacity-50 cursor-default" style="pointer-events: none;" disabled data-astro-cid-2oetuemr>
Suivant
</button> </div> <!-- Message de fin --> <div id="completionMessage" class="hidden animate-fade-in" data-astro-cid-2oetuemr> <div class="text-6xl mb-6" data-astro-cid-2oetuemr>\u{1F389}</div> <h2 class="text-primary text-2xl md:text-3xl font-semibold mb-6" data-astro-cid-2oetuemr>
Merci pour vos r\xE9ponses !
</h2> <p class="text-gray-600 mb-8 px-4" data-astro-cid-2oetuemr>
Vos r\xE9ponses ont \xE9t\xE9 enregistr\xE9es avec succ\xE8s.
</p> <div class="flex flex-col sm:flex-row gap-4 justify-center" data-astro-cid-2oetuemr> <button id="restartBtn" class="hover:cursor-pointer bg-primary text-white px-6 py-2 rounded-full text-sm font-medium hover:bg-white hover:text-primary hover:border transition-all duration-300 hover:-translate-y-0.5" data-astro-cid-2oetuemr>
Recommencer
</button> <button id="viewResultsBtn" class="hover:cursor-pointer bg-gray-100 text-gray-700 px-6 py-2 rounded-full text-sm font-medium hover:bg-gray-200 transition-all duration-300" data-astro-cid-2oetuemr>
Voir les r\xE9sultats
</button> <a href="/accueil-app" class="hover:cursor-pointer bg-green-500 text-white px-6 py-2 rounded-full text-sm font-medium hover:bg-green-600 transition-all duration-300 flex items-center justify-center" data-astro-cid-2oetuemr>
Continuer vers l'application
</a> </div> </div> <!-- R\xE9sultats --> <!-- R\xE9sultats --> <div id="resultsView" class="hidden" data-astro-cid-2oetuemr> <h2 class="text-primary text-2xl md:text-3xl font-semibold mb-6" data-astro-cid-2oetuemr>
Vos r\xE9ponses
</h2> <div id="resultsList" class="text-left space-y-4 mb-8" data-astro-cid-2oetuemr></div> <div class="flex flex-col sm:flex-row gap-3 justify-center" data-astro-cid-2oetuemr> <button id="backToCompletionBtn" class="hover:cursor-pointer bg-gray-100 text-gray-700 px-6 py-2.5 rounded-full text-sm font-medium hover:bg-gray-200 transition-all duration-300 mb-2 sm:mb-0" data-astro-cid-2oetuemr>
Retour
</button> <button id="restartFromResultsBtn" class="hover:cursor-pointer bg-primary text-white px-6 py-2.5 rounded-full text-sm font-medium hover:bg-white hover:text-primary border border-primary transition-all duration-300 mb-2 sm:mb-0" data-astro-cid-2oetuemr>
Recommencer
</button> <a href="/accueil-app" class="hover:cursor-pointer inline-flex items-center justify-center bg-green-500 text-white px-6 py-2.5 rounded-full text-sm font-medium hover:bg-green-600 transition-all duration-300 hover:-translate-y-0.5 hover:shadow-md" data-astro-cid-2oetuemr> <span data-astro-cid-2oetuemr>Continuer vers l'application</span> </a> </div> </div> </div> </div>  `, " ", " <script>(function(){", '\n  class Questionnaire {\n    constructor() {\n      this.questions = questions;\n      this.currentQuestion = 0;\n      this.answers = [];\n      this.totalQuestions = totalQuestions;\n      this.selectedOption = null;\n\n      this.init();\n    }\n\n    init() {\n      this.bindEvents();\n      this.updateDisplay();\n    }\n\n    bindEvents() {\n      // \xC9v\xE9nements pour les options (clic et clavier)\n      document.addEventListener("click", (e) => {\n        const option = e.target.closest(".option");\n        if (option) {\n          this.selectOption(option);\n        }\n      });\n\n      // Support clavier pour les options\n      document.addEventListener("keydown", (e) => {\n        const option = e.target.closest(".option");\n        if (option && (e.key === "Enter" || e.key === " ")) {\n          e.preventDefault();\n          this.selectOption(option);\n        }\n      });\n\n      // Bouton suivant\n      const nextBtn = document.getElementById("nextBtn");\n      if (nextBtn) {\n        nextBtn.addEventListener("click", () => {\n          if (!nextBtn.disabled) {\n            this.nextQuestion();\n          }\n        });\n      }\n\n      // Bouton retour\n      const backBtn = document.getElementById("backBtn");\n      if (backBtn) {\n        backBtn.addEventListener("click", () => {\n          this.previousQuestion();\n        });\n      }\n\n      // Boutons de fin\n      this.bindCompletionEvents();\n    }\n\n    bindCompletionEvents() {\n      const restartBtn = document.getElementById("restartBtn");\n      const restartFromResultsBtn = document.getElementById(\n        "restartFromResultsBtn"\n      );\n      const viewResultsBtn = document.getElementById("viewResultsBtn");\n      const backToCompletionBtn = document.getElementById(\n        "backToCompletionBtn"\n      );\n\n      if (restartBtn) {\n        restartBtn.addEventListener("click", () => this.restart());\n      }\n\n      if (restartFromResultsBtn) {\n        restartFromResultsBtn.addEventListener("click", () => this.restart());\n      }\n\n      if (viewResultsBtn) {\n        viewResultsBtn.addEventListener("click", () => this.showResults());\n      }\n\n      if (backToCompletionBtn) {\n        backToCompletionBtn.addEventListener("click", () =>\n          this.showCompletion()\n        );\n      }\n    }\n\n    selectOption(optionElement) {\n      // CORRECTION: Sauvegarder la valeur avant de modifier les classes\n      const selectedValue = optionElement.dataset.value;\n\n      // D\xE9s\xE9lectionner toutes les options\n      document.querySelectorAll(".option").forEach((opt) => {\n        opt.classList.remove(\n          "selected",\n          "border-primary",\n          "bg-primary/5",\n          "text-primary"\n        );\n        opt.classList.add("border-gray-200");\n        opt.setAttribute("aria-checked", "false");\n\n        const radioDot = opt.querySelector(".radio-dot");\n        if (radioDot) {\n          radioDot.classList.remove("opacity-100", "scale-100");\n          radioDot.classList.add("opacity-0", "scale-0");\n        }\n      });\n\n      // S\xE9lectionner l\'option cliqu\xE9e\n      optionElement.classList.add("selected", "border-primary", "bg-primary/5");\n      optionElement.classList.remove("border-gray-200");\n      optionElement.setAttribute("aria-checked", "true");\n\n      const radioDot = optionElement.querySelector(".radio-dot");\n      if (radioDot) {\n        radioDot.classList.remove("opacity-0", "scale-0");\n        radioDot.classList.add("opacity-100", "scale-100");\n      }\n\n      // Activer le bouton suivant\n      const nextBtn = document.getElementById("nextBtn");\n      if (nextBtn) {\n        nextBtn.classList.remove("opacity-50");\n        nextBtn.style.pointerEvents = "auto";\n        nextBtn.classList.add(\n          "hover:bg-primary/90",\n          "hover:-translate-y-0.5",\n          "hover:shadow-lg"\n        );\n        nextBtn.disabled = false;\n        nextBtn.style.cursor = "pointer";\n      }\n\n      // Sauvegarder la r\xE9ponse\n      this.answers[this.currentQuestion] = selectedValue;\n      this.selectedOption = optionElement;\n    }\n\n    nextQuestion() {\n      if (this.answers[this.currentQuestion] === undefined) return;\n\n      if (this.currentQuestion < this.totalQuestions - 1) {\n        this.currentQuestion++;\n        this.updateDisplay();\n\n        // Faire d\xE9filer vers le haut du conteneur du questionnaire\n        const questionnaireContainer = document.querySelector(".min-h-screen");\n        if (questionnaireContainer) {\n          questionnaireContainer.scrollIntoView({\n            behavior: "smooth",\n            block: "start",\n          });\n        }\n      } else {\n        this.showCompletion();\n      }\n    }\n\n    previousQuestion() {\n      if (this.currentQuestion > 0) {\n        this.currentQuestion--;\n        this.updateDisplay();\n\n        // Faire d\xE9filer vers le haut du conteneur du questionnaire\n        const questionnaireContainer = document.querySelector(".min-h-screen");\n        if (questionnaireContainer) {\n          questionnaireContainer.scrollIntoView({\n            behavior: "smooth",\n            block: "start",\n          });\n        }\n      }\n    }\n\n    updateDisplay() {\n      const question = this.questions[this.currentQuestion];\n\n      // Mettre \xE0 jour le compteur\n      const questionCounter = document.getElementById("questionCounter");\n      if (questionCounter) {\n        questionCounter.textContent = `Question ${this.currentQuestion + 1} sur ${this.totalQuestions}`;\n      }\n\n      // Mettre \xE0 jour la barre de progression\n      const progressBar = document.getElementById("progressBar");\n      if (progressBar) {\n        const progress =\n          ((this.currentQuestion + 1) / this.totalQuestions) * 100;\n        progressBar.style.width = `${progress}%`;\n      }\n\n      // Mettre \xE0 jour le titre\n      const questionTitle = document.getElementById("questionTitle");\n      if (questionTitle) {\n        questionTitle.textContent = question.title;\n      }\n\n      // Mettre \xE0 jour les options\n      this.updateOptions(question.options);\n\n      // R\xE9initialiser le bouton suivant\n      this.resetNextButton();\n\n      // Restaurer la r\xE9ponse pr\xE9c\xE9dente si elle existe\n      setTimeout(() => {\n        if (this.answers[this.currentQuestion]) {\n          const savedOption = document.querySelector(\n            `.option[data-value="${this.answers[this.currentQuestion]}"]`\n          );\n          if (savedOption) {\n            this.selectOption(savedOption);\n          }\n        }\n      }, 0);\n\n      // G\xE9rer la visibilit\xE9 du bouton retour\n      const backBtn = document.getElementById("backBtn");\n      if (backBtn) {\n        if (this.currentQuestion === 0) {\n          backBtn.classList.add("hidden");\n        } else {\n          backBtn.classList.remove("hidden");\n        }\n      }\n    }\n\n    updateOptions(options) {\n      const container = document.getElementById("optionsContainer");\n      if (!container) return;\n\n      container.innerHTML = "";\n\n      options.forEach((option) => {\n        const optionElement = document.createElement("div");\n        optionElement.className =\n          "option group flex items-center p-4 border-2 border-gray-200 rounded-xl cursor-pointer transition-all duration-300 hover:border-primary hover:bg-primary/5 text-left";\n        optionElement.dataset.value = option;\n        optionElement.setAttribute("role", "radio");\n        optionElement.setAttribute("tabindex", "0");\n        optionElement.setAttribute("aria-checked", "false");\n\n        optionElement.innerHTML = `\n          <div class="radio-button w-5 h-5 border-2 border-gray-300 rounded-full mr-4 relative transition-all duration-300 group-hover:border-primary">\n            <div class="radio-dot w-2 h-2 bg-primary rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-0 scale-0 transition-all duration-300"></div>\n          </div>\n          <span class="text-base font-medium select-none">${option}</span>\n        `;\n\n        container.appendChild(optionElement);\n      });\n    }\n\n    resetNextButton() {\n      const nextBtn = document.getElementById("nextBtn");\n      if (nextBtn) {\n        nextBtn.classList.add("opacity-50");\n        nextBtn.style.pointerEvents = "none";\n        nextBtn.style.cursor = "default";\n        nextBtn.classList.remove(\n          "hover:bg-primary/90",\n          "hover:-translate-y-0.5",\n          "hover:shadow-lg"\n        );\n        nextBtn.disabled = true;\n      }\n    }\n\n    showCompletion() {\n      const questionContent = document.getElementById("questionContent");\n      const completionMessage = document.getElementById("completionMessage");\n      const resultsView = document.getElementById("resultsView");\n\n      if (questionContent) questionContent.classList.add("hidden");\n      if (resultsView) resultsView.classList.add("hidden");\n      if (completionMessage) completionMessage.classList.remove("hidden");\n\n      console.log("R\xE9ponses du questionnaire:", this.answers);\n\n      this.saveAnswers();\n\n    }\n\n    showResults() {\n      const completionMessage = document.getElementById("completionMessage");\n      const resultsView = document.getElementById("resultsView");\n      const resultsList = document.getElementById("resultsList");\n\n      if (completionMessage) completionMessage.classList.add("hidden");\n      if (resultsView) resultsView.classList.remove("hidden");\n\n      if (resultsList) {\n        resultsList.innerHTML = "";\n        this.questions.forEach((question, index) => {\n          const resultItem = document.createElement("div");\n          resultItem.className = "bg-gray-50 p-4 rounded-lg";\n          resultItem.innerHTML = `\n            <div class="font-semibold text-gray-800 mb-2">${question.title}</div>\n            <div class="text-primary font-medium">${this.answers[index] || "Non r\xE9pondu"}</div>\n          `;\n          resultsList.appendChild(resultItem);\n        });\n      }\n    }\n\n    restart() {\n      this.currentQuestion = 0;\n      this.answers = [];\n      this.selectedOption = null;\n\n      // R\xE9afficher le contenu principal\n      const questionContent = document.getElementById("questionContent");\n      const completionMessage = document.getElementById("completionMessage");\n      const resultsView = document.getElementById("resultsView");\n\n      if (questionContent) questionContent.classList.remove("hidden");\n      if (completionMessage) completionMessage.classList.add("hidden");\n      if (resultsView) resultsView.classList.add("hidden");\n\n      this.updateDisplay();\n    }\n\n    async saveAnswers() {\n  // Seulement si on a un ID utilisateur\n  const userId = "{userId}"; // Cette syntaxe permet d\'acc\xE9der \xE0 la prop userId\n\n  if (userId) {\n    try {\n      // Importation de PocketBase si n\xE9cessaire\n      const PocketBase = window.PocketBase;\n      if (!PocketBase) {\n        console.error(\'PocketBase non charg\xE9\');\n        return;\n      }\n      \n      const pb = new PocketBase("https://echosafe.eloishenry.fr");\n      \n      // R\xE9cup\xE9rer l\'utilisateur authentifi\xE9\n      const authCookie = document.cookie;\n      if (authCookie) {\n        pb.authStore.loadFromCookie(authCookie);\n      }\n      \n      if (!pb.authStore.isValid) {\n        console.error("Session expir\xE9e");\n        return;\n      }\n\n      // Pr\xE9parer les donn\xE9es \xE0 enregistrer\n      const data = {\n        user_id: userId,\n        responses: JSON.stringify(this.answers),\n        questions: JSON.stringify(this.questions),\n        completed_at: new Date().toISOString()\n      };\n\n      // Enregistrer les r\xE9ponses dans PocketBase\n      await pb.collection(\'form_responses\').create(data);\n      \n      console.log("R\xE9ponses enregistr\xE9es avec succ\xE8s !");\n    } catch (error) {\n      console.error("Erreur lors de l\'enregistrement des r\xE9ponses:", error);\n    }\n  } else {\n    console.log("Aucun utilisateur connect\xE9, r\xE9ponses non enregistr\xE9es");\n  }\n  }\n\n  // Initialiser le questionnaire quand le DOM est pr\xEAt\n  document.addEventListener("DOMContentLoaded", () => {\n    new Questionnaire();\n  });\n})();<\/script>'], ["", '<div class="min-h-screen bg-white flex items-center justify-center p-5" data-astro-cid-2oetuemr> <div class="bg-white rounded-3xl shadow-2xl p-8 md:p-10 max-w-lg w-full text-center relative" data-astro-cid-2oetuemr> <!-- Bouton retour --> <!-- Bouton retour --> <button id="backBtn" class="hover:cursor-pointer absolute top-6 left-6 md:top-8 md:left-8 text-3xl text-primary hover:scale-110 transition-transform duration-200 hidden w-10 h-10 flex items-center justify-center" aria-label="Question pr\xE9c\xE9dente" data-astro-cid-2oetuemr>\n\u2039\n</button> <!-- Contenu principal du questionnaire --> <div id="questionContent" data-astro-cid-2oetuemr> <!-- Compteur de questions --> <div id="questionCounter" class="text-gray-500 text-sm mb-3" data-astro-cid-2oetuemr>\nQuestion 1 sur ', ' </div> <!-- Barre de progression --> <div class="w-full h-1 bg-gray-200 rounded-full mb-8" data-astro-cid-2oetuemr> <div id="progressBar" class="h-full bg-primary rounded-full transition-all duration-500 ease-out"', ' data-astro-cid-2oetuemr></div> </div> <!-- Titre de la question --> <h2 id="questionTitle" class="text-primary text-2xl md:text-3xl font-semibold mb-8 md:mb-10 leading-tight px-2" data-astro-cid-2oetuemr> ', ' </h2> <!-- Options --> <div id="optionsContainer" class="flex flex-col gap-4 mb-8 md:mb-10" data-astro-cid-2oetuemr> ', ` </div> <!-- Bouton suivant - FIX: Ajout de !important pour forcer l'affichage --> <button id="nextBtn" class="bg-primary text-white px-8 md:px-10 py-3 md:py-4 rounded-full text-base font-semibold hover:bg-white hover:text-primary border border-primary transition-all duration-300 hover:-translate-y-0.5 hover:shadow-lg opacity-50 cursor-default" style="pointer-events: none;" disabled data-astro-cid-2oetuemr>
Suivant
</button> </div> <!-- Message de fin --> <div id="completionMessage" class="hidden animate-fade-in" data-astro-cid-2oetuemr> <div class="text-6xl mb-6" data-astro-cid-2oetuemr>\u{1F389}</div> <h2 class="text-primary text-2xl md:text-3xl font-semibold mb-6" data-astro-cid-2oetuemr>
Merci pour vos r\xE9ponses !
</h2> <p class="text-gray-600 mb-8 px-4" data-astro-cid-2oetuemr>
Vos r\xE9ponses ont \xE9t\xE9 enregistr\xE9es avec succ\xE8s.
</p> <div class="flex flex-col sm:flex-row gap-4 justify-center" data-astro-cid-2oetuemr> <button id="restartBtn" class="hover:cursor-pointer bg-primary text-white px-6 py-2 rounded-full text-sm font-medium hover:bg-white hover:text-primary hover:border transition-all duration-300 hover:-translate-y-0.5" data-astro-cid-2oetuemr>
Recommencer
</button> <button id="viewResultsBtn" class="hover:cursor-pointer bg-gray-100 text-gray-700 px-6 py-2 rounded-full text-sm font-medium hover:bg-gray-200 transition-all duration-300" data-astro-cid-2oetuemr>
Voir les r\xE9sultats
</button> <a href="/accueil-app" class="hover:cursor-pointer bg-green-500 text-white px-6 py-2 rounded-full text-sm font-medium hover:bg-green-600 transition-all duration-300 flex items-center justify-center" data-astro-cid-2oetuemr>
Continuer vers l'application
</a> </div> </div> <!-- R\xE9sultats --> <!-- R\xE9sultats --> <div id="resultsView" class="hidden" data-astro-cid-2oetuemr> <h2 class="text-primary text-2xl md:text-3xl font-semibold mb-6" data-astro-cid-2oetuemr>
Vos r\xE9ponses
</h2> <div id="resultsList" class="text-left space-y-4 mb-8" data-astro-cid-2oetuemr></div> <div class="flex flex-col sm:flex-row gap-3 justify-center" data-astro-cid-2oetuemr> <button id="backToCompletionBtn" class="hover:cursor-pointer bg-gray-100 text-gray-700 px-6 py-2.5 rounded-full text-sm font-medium hover:bg-gray-200 transition-all duration-300 mb-2 sm:mb-0" data-astro-cid-2oetuemr>
Retour
</button> <button id="restartFromResultsBtn" class="hover:cursor-pointer bg-primary text-white px-6 py-2.5 rounded-full text-sm font-medium hover:bg-white hover:text-primary border border-primary transition-all duration-300 mb-2 sm:mb-0" data-astro-cid-2oetuemr>
Recommencer
</button> <a href="/accueil-app" class="hover:cursor-pointer inline-flex items-center justify-center bg-green-500 text-white px-6 py-2.5 rounded-full text-sm font-medium hover:bg-green-600 transition-all duration-300 hover:-translate-y-0.5 hover:shadow-md" data-astro-cid-2oetuemr> <span data-astro-cid-2oetuemr>Continuer vers l'application</span> </a> </div> </div> </div> </div>  `, " ", " <script>(function(){", '\n  class Questionnaire {\n    constructor() {\n      this.questions = questions;\n      this.currentQuestion = 0;\n      this.answers = [];\n      this.totalQuestions = totalQuestions;\n      this.selectedOption = null;\n\n      this.init();\n    }\n\n    init() {\n      this.bindEvents();\n      this.updateDisplay();\n    }\n\n    bindEvents() {\n      // \xC9v\xE9nements pour les options (clic et clavier)\n      document.addEventListener("click", (e) => {\n        const option = e.target.closest(".option");\n        if (option) {\n          this.selectOption(option);\n        }\n      });\n\n      // Support clavier pour les options\n      document.addEventListener("keydown", (e) => {\n        const option = e.target.closest(".option");\n        if (option && (e.key === "Enter" || e.key === " ")) {\n          e.preventDefault();\n          this.selectOption(option);\n        }\n      });\n\n      // Bouton suivant\n      const nextBtn = document.getElementById("nextBtn");\n      if (nextBtn) {\n        nextBtn.addEventListener("click", () => {\n          if (!nextBtn.disabled) {\n            this.nextQuestion();\n          }\n        });\n      }\n\n      // Bouton retour\n      const backBtn = document.getElementById("backBtn");\n      if (backBtn) {\n        backBtn.addEventListener("click", () => {\n          this.previousQuestion();\n        });\n      }\n\n      // Boutons de fin\n      this.bindCompletionEvents();\n    }\n\n    bindCompletionEvents() {\n      const restartBtn = document.getElementById("restartBtn");\n      const restartFromResultsBtn = document.getElementById(\n        "restartFromResultsBtn"\n      );\n      const viewResultsBtn = document.getElementById("viewResultsBtn");\n      const backToCompletionBtn = document.getElementById(\n        "backToCompletionBtn"\n      );\n\n      if (restartBtn) {\n        restartBtn.addEventListener("click", () => this.restart());\n      }\n\n      if (restartFromResultsBtn) {\n        restartFromResultsBtn.addEventListener("click", () => this.restart());\n      }\n\n      if (viewResultsBtn) {\n        viewResultsBtn.addEventListener("click", () => this.showResults());\n      }\n\n      if (backToCompletionBtn) {\n        backToCompletionBtn.addEventListener("click", () =>\n          this.showCompletion()\n        );\n      }\n    }\n\n    selectOption(optionElement) {\n      // CORRECTION: Sauvegarder la valeur avant de modifier les classes\n      const selectedValue = optionElement.dataset.value;\n\n      // D\xE9s\xE9lectionner toutes les options\n      document.querySelectorAll(".option").forEach((opt) => {\n        opt.classList.remove(\n          "selected",\n          "border-primary",\n          "bg-primary/5",\n          "text-primary"\n        );\n        opt.classList.add("border-gray-200");\n        opt.setAttribute("aria-checked", "false");\n\n        const radioDot = opt.querySelector(".radio-dot");\n        if (radioDot) {\n          radioDot.classList.remove("opacity-100", "scale-100");\n          radioDot.classList.add("opacity-0", "scale-0");\n        }\n      });\n\n      // S\xE9lectionner l\'option cliqu\xE9e\n      optionElement.classList.add("selected", "border-primary", "bg-primary/5");\n      optionElement.classList.remove("border-gray-200");\n      optionElement.setAttribute("aria-checked", "true");\n\n      const radioDot = optionElement.querySelector(".radio-dot");\n      if (radioDot) {\n        radioDot.classList.remove("opacity-0", "scale-0");\n        radioDot.classList.add("opacity-100", "scale-100");\n      }\n\n      // Activer le bouton suivant\n      const nextBtn = document.getElementById("nextBtn");\n      if (nextBtn) {\n        nextBtn.classList.remove("opacity-50");\n        nextBtn.style.pointerEvents = "auto";\n        nextBtn.classList.add(\n          "hover:bg-primary/90",\n          "hover:-translate-y-0.5",\n          "hover:shadow-lg"\n        );\n        nextBtn.disabled = false;\n        nextBtn.style.cursor = "pointer";\n      }\n\n      // Sauvegarder la r\xE9ponse\n      this.answers[this.currentQuestion] = selectedValue;\n      this.selectedOption = optionElement;\n    }\n\n    nextQuestion() {\n      if (this.answers[this.currentQuestion] === undefined) return;\n\n      if (this.currentQuestion < this.totalQuestions - 1) {\n        this.currentQuestion++;\n        this.updateDisplay();\n\n        // Faire d\xE9filer vers le haut du conteneur du questionnaire\n        const questionnaireContainer = document.querySelector(".min-h-screen");\n        if (questionnaireContainer) {\n          questionnaireContainer.scrollIntoView({\n            behavior: "smooth",\n            block: "start",\n          });\n        }\n      } else {\n        this.showCompletion();\n      }\n    }\n\n    previousQuestion() {\n      if (this.currentQuestion > 0) {\n        this.currentQuestion--;\n        this.updateDisplay();\n\n        // Faire d\xE9filer vers le haut du conteneur du questionnaire\n        const questionnaireContainer = document.querySelector(".min-h-screen");\n        if (questionnaireContainer) {\n          questionnaireContainer.scrollIntoView({\n            behavior: "smooth",\n            block: "start",\n          });\n        }\n      }\n    }\n\n    updateDisplay() {\n      const question = this.questions[this.currentQuestion];\n\n      // Mettre \xE0 jour le compteur\n      const questionCounter = document.getElementById("questionCounter");\n      if (questionCounter) {\n        questionCounter.textContent = \\`Question \\${this.currentQuestion + 1} sur \\${this.totalQuestions}\\`;\n      }\n\n      // Mettre \xE0 jour la barre de progression\n      const progressBar = document.getElementById("progressBar");\n      if (progressBar) {\n        const progress =\n          ((this.currentQuestion + 1) / this.totalQuestions) * 100;\n        progressBar.style.width = \\`\\${progress}%\\`;\n      }\n\n      // Mettre \xE0 jour le titre\n      const questionTitle = document.getElementById("questionTitle");\n      if (questionTitle) {\n        questionTitle.textContent = question.title;\n      }\n\n      // Mettre \xE0 jour les options\n      this.updateOptions(question.options);\n\n      // R\xE9initialiser le bouton suivant\n      this.resetNextButton();\n\n      // Restaurer la r\xE9ponse pr\xE9c\xE9dente si elle existe\n      setTimeout(() => {\n        if (this.answers[this.currentQuestion]) {\n          const savedOption = document.querySelector(\n            \\`.option[data-value="\\${this.answers[this.currentQuestion]}"]\\`\n          );\n          if (savedOption) {\n            this.selectOption(savedOption);\n          }\n        }\n      }, 0);\n\n      // G\xE9rer la visibilit\xE9 du bouton retour\n      const backBtn = document.getElementById("backBtn");\n      if (backBtn) {\n        if (this.currentQuestion === 0) {\n          backBtn.classList.add("hidden");\n        } else {\n          backBtn.classList.remove("hidden");\n        }\n      }\n    }\n\n    updateOptions(options) {\n      const container = document.getElementById("optionsContainer");\n      if (!container) return;\n\n      container.innerHTML = "";\n\n      options.forEach((option) => {\n        const optionElement = document.createElement("div");\n        optionElement.className =\n          "option group flex items-center p-4 border-2 border-gray-200 rounded-xl cursor-pointer transition-all duration-300 hover:border-primary hover:bg-primary/5 text-left";\n        optionElement.dataset.value = option;\n        optionElement.setAttribute("role", "radio");\n        optionElement.setAttribute("tabindex", "0");\n        optionElement.setAttribute("aria-checked", "false");\n\n        optionElement.innerHTML = \\`\n          <div class="radio-button w-5 h-5 border-2 border-gray-300 rounded-full mr-4 relative transition-all duration-300 group-hover:border-primary">\n            <div class="radio-dot w-2 h-2 bg-primary rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-0 scale-0 transition-all duration-300"></div>\n          </div>\n          <span class="text-base font-medium select-none">\\${option}</span>\n        \\`;\n\n        container.appendChild(optionElement);\n      });\n    }\n\n    resetNextButton() {\n      const nextBtn = document.getElementById("nextBtn");\n      if (nextBtn) {\n        nextBtn.classList.add("opacity-50");\n        nextBtn.style.pointerEvents = "none";\n        nextBtn.style.cursor = "default";\n        nextBtn.classList.remove(\n          "hover:bg-primary/90",\n          "hover:-translate-y-0.5",\n          "hover:shadow-lg"\n        );\n        nextBtn.disabled = true;\n      }\n    }\n\n    showCompletion() {\n      const questionContent = document.getElementById("questionContent");\n      const completionMessage = document.getElementById("completionMessage");\n      const resultsView = document.getElementById("resultsView");\n\n      if (questionContent) questionContent.classList.add("hidden");\n      if (resultsView) resultsView.classList.add("hidden");\n      if (completionMessage) completionMessage.classList.remove("hidden");\n\n      console.log("R\xE9ponses du questionnaire:", this.answers);\n\n      this.saveAnswers();\n\n    }\n\n    showResults() {\n      const completionMessage = document.getElementById("completionMessage");\n      const resultsView = document.getElementById("resultsView");\n      const resultsList = document.getElementById("resultsList");\n\n      if (completionMessage) completionMessage.classList.add("hidden");\n      if (resultsView) resultsView.classList.remove("hidden");\n\n      if (resultsList) {\n        resultsList.innerHTML = "";\n        this.questions.forEach((question, index) => {\n          const resultItem = document.createElement("div");\n          resultItem.className = "bg-gray-50 p-4 rounded-lg";\n          resultItem.innerHTML = \\`\n            <div class="font-semibold text-gray-800 mb-2">\\${question.title}</div>\n            <div class="text-primary font-medium">\\${this.answers[index] || "Non r\xE9pondu"}</div>\n          \\`;\n          resultsList.appendChild(resultItem);\n        });\n      }\n    }\n\n    restart() {\n      this.currentQuestion = 0;\n      this.answers = [];\n      this.selectedOption = null;\n\n      // R\xE9afficher le contenu principal\n      const questionContent = document.getElementById("questionContent");\n      const completionMessage = document.getElementById("completionMessage");\n      const resultsView = document.getElementById("resultsView");\n\n      if (questionContent) questionContent.classList.remove("hidden");\n      if (completionMessage) completionMessage.classList.add("hidden");\n      if (resultsView) resultsView.classList.add("hidden");\n\n      this.updateDisplay();\n    }\n\n    async saveAnswers() {\n  // Seulement si on a un ID utilisateur\n  const userId = "{userId}"; // Cette syntaxe permet d\'acc\xE9der \xE0 la prop userId\n\n  if (userId) {\n    try {\n      // Importation de PocketBase si n\xE9cessaire\n      const PocketBase = window.PocketBase;\n      if (!PocketBase) {\n        console.error(\'PocketBase non charg\xE9\');\n        return;\n      }\n      \n      const pb = new PocketBase("https://echosafe.eloishenry.fr");\n      \n      // R\xE9cup\xE9rer l\'utilisateur authentifi\xE9\n      const authCookie = document.cookie;\n      if (authCookie) {\n        pb.authStore.loadFromCookie(authCookie);\n      }\n      \n      if (!pb.authStore.isValid) {\n        console.error("Session expir\xE9e");\n        return;\n      }\n\n      // Pr\xE9parer les donn\xE9es \xE0 enregistrer\n      const data = {\n        user_id: userId,\n        responses: JSON.stringify(this.answers),\n        questions: JSON.stringify(this.questions),\n        completed_at: new Date().toISOString()\n      };\n\n      // Enregistrer les r\xE9ponses dans PocketBase\n      await pb.collection(\'form_responses\').create(data);\n      \n      console.log("R\xE9ponses enregistr\xE9es avec succ\xE8s !");\n    } catch (error) {\n      console.error("Erreur lors de l\'enregistrement des r\xE9ponses:", error);\n    }\n  } else {\n    console.log("Aucun utilisateur connect\xE9, r\xE9ponses non enregistr\xE9es");\n  }\n  }\n\n  // Initialiser le questionnaire quand le DOM est pr\xEAt\n  document.addEventListener("DOMContentLoaded", () => {\n    new Questionnaire();\n  });\n})();<\/script>'])), maybeRenderHead(), totalQuestions, addAttribute(`width: ${1 / totalQuestions * 100}%`, "style"), questions[0].title, questions[0].options.map((option) => renderTemplate`<div class="option group flex items-center p-4 border-2 border-gray-200 rounded-xl cursor-pointer transition-all duration-300 hover:border-primary hover:bg-primary/5 text-left"${addAttribute(option, "data-value")} role="radio" tabindex="0" aria-checked="false" data-astro-cid-2oetuemr> <div class="radio-button w-5 h-5 border-2 border-gray-300 rounded-full mr-4 relative transition-all duration-300 group-hover:border-primary" data-astro-cid-2oetuemr> <div class="radio-dot w-2 h-2 bg-primary rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-0 scale-0 transition-all duration-300" data-astro-cid-2oetuemr></div> </div> <span class="text-base font-medium select-none" data-astro-cid-2oetuemr>${option}</span> </div>`), renderScript($$result, "C:/Users/Utilisateur/GitHub/projet-co-s2-2025-17_echosafe/src/components/Formulaire.astro?astro&type=script&index=0&lang.ts"), renderScript($$result, "C:/Users/Utilisateur/GitHub/projet-co-s2-2025-17_echosafe/src/components/Formulaire.astro?astro&type=script&index=1&lang.ts"), defineScriptVars({ questions, totalQuestions }));
}, "C:/Users/Utilisateur/GitHub/projet-co-s2-2025-17_echosafe/src/components/Formulaire.astro", void 0);

const $$Astro = createAstro("https://echosafe.eloishenry.fr/");
const $$Index = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  const isNewUser = Astro2.url.searchParams.get("new") === "true";
  if (!isNewUser) {
    return Astro2.redirect("/accueil-app");
  }
  const pb = new PocketBase("https://echosafe.eloishenry.fr");
  const authCookie = Astro2.request.headers.get("cookie");
  let userId = "";
  if (authCookie) {
    pb.authStore.loadFromCookie(authCookie);
    if (pb.authStore.isValid) {
      userId = pb.authStore.model.id;
    }
  }
  const questions = [
    {
      id: 1,
      title: "Avez-vous d\xE9j\xE0 \xE9t\xE9 victime de harc\xE8lement ?",
      options: ["Oui", "Non", "Pr\xE9f\xE8re ne pas r\xE9pondre"]
    },
    {
      id: 2,
      title: "Quelle forme de harc\xE8lement avez-vous subie ?",
      options: [
        "Harc\xE8lement verbal",
        "Harc\xE8lement physique",
        "Cyberharc\xE8lement",
        "Harc\xE8lement sexuel",
        "Autre",
        "Pr\xE9f\xE8re ne pas r\xE9pondre"
      ]
    },
    {
      id: 3,
      title: "O\xF9 cela s'est-il produit ?",
      options: [
        "\xC0 l'\xE9cole/universit\xE9",
        "Au travail",
        "Sur internet",
        "Dans un lieu public",
        "Autre",
        "Pr\xE9f\xE8re ne pas r\xE9pondre"
      ]
    },
    {
      id: 4,
      title: "Avez-vous cherch\xE9 de l'aide ?",
      options: [
        "Oui, aupr\xE8s d'un professionnel",
        "Oui, aupr\xE8s de proches",
        "Oui, aupr\xE8s des autorit\xE9s",
        "Non",
        "Pr\xE9f\xE8re ne pas r\xE9pondre"
      ]
    },
    {
      id: 5,
      title: "Comment vous sentez-vous aujourd'hui par rapport \xE0 cette exp\xE9rience ?",
      options: [
        "Encore traumatis\xE9(e)",
        "En voie de gu\xE9rison",
        "R\xE9silient(e)",
        "Indiff\xE9rent(e)",
        "Pr\xE9f\xE8re ne pas r\xE9pondre"
      ]
    }
  ];
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, {}, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<div class="min-h-screen py-8"> <div class="max-w-4xl mx-auto"> ${renderComponent($$result2, "Formulaire", $$Formulaire, { "questions": questions, "userId": userId })} </div> </div> ` })}`;
}, "C:/Users/Utilisateur/GitHub/projet-co-s2-2025-17_echosafe/src/pages/formulaire/index.astro", void 0);

const $$file = "C:/Users/Utilisateur/GitHub/projet-co-s2-2025-17_echosafe/src/pages/formulaire/index.astro";
const $$url = "/formulaire";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Index,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
